#Step1: Download NGS data 
#use sftp and the account details, password, etc. provided by the sequencing facility
sftp -r data_13028@imb-sftp.imb.uq.edu.au:* .
#check the download 
md5sum *gz >h
#cat h ../md5sum.txt |awk '{print $1}' | sort -k1 | uniq -d |wc -l
#48 
#chech the md5sum numbers! and compare with what the seq facility sent! otherwise transfer isnot complete! 
#48 samples 24 each of R1 and R1 (in case of paired-end sequencing), 3 per sample > 8 libraries ! All good :) 


#Step2: QCing samples usign FASTQC: use nano, vi, or any text editor to write this BASH and save as fastqc.sh
#Check if you are using SLURM or PBS!

#!/bin/bash
#SBATCH --output  dump.out
#SBATCH --error dump.err
#SBATCH --mem=5gb
#SBATCH --time=30:00
#SBATCH --mail-user=amin.esmail@csiro.au
/apps/fastqc/0.11.8/fastqc ${FILE}

#in the terminal type: 
for i in `ls *gz`; do sbatch --export FILE=$i fastqc.sh ;done
#inspect the files carefully, check for quality, adapters, etc... 
#assume you have high quality data! note you really care about that if you are going to assemble the reads, for mapping the aligner will do some QC before mapping 

#Step3: prepare the refrence for mapping:
open nano, type the following and save as bowtie2-build.sh
#!/bin/bash
#SBATCH --output  dump.out
#SBATCH --error dump.err
#SBATCH --mem=20gb
#SBATCH --time=16:00:00
#SBATCH --mail-user=amin.esmail@csiro.au
module load bowtie
module load samtools
bowtie2-build genome.fq genome

#Step4: Mapping reads using BOWTIE2 
AGAIN open nano, print the following and save as  bowtie2-mapping.sh
#!/bin/bash
#SBATCH --output  dump.out
#SBATCH --error dump.err
#SBATCH --mem=20gb
#SBATCH --time=16:00:00
#SBATCH --mail-user=amin.esmail@csiro.au
module load bowtie
module load samtools
bowtie2 --very-sensitive -x /PATH/name-of-the-index -1 ${FILE}_R1_001.fastq.gz -2 ${FILE}_R2_001.fastq.gz |samtools view -u - |samtools sort - >${FILE}.bam

#To running the bowtie2-mapping.sh, you need a FILE variable which is the name of the sample without the suffix (_R1_001.fastq.gz AND _R2_001.fastq.gz) in my case 
#in the terminal type the following, check your file names and change accordingly! Otherwise, with no surpise NOTHING will work 
ls *fastq.gz |tr '_' "\t" |awk '{print $1"_"$2"_"$3}' |sort -k1 | uniq >file_names2  
for i  in `cat file_names2`; do sbatch --export FILE=$i bowtie2.sh ;done

#Step5:MAPPING STATSISTICS using samtools flagstat
create a script for that called samtools_flagstat.sh
#!/bin/bash
#SBATCH --output  dump.out
#SBATCH --error dump.err
#SBATCH --mem=10gb
#SBATCH --time=40:00
#SBATCH --mail-user=amin.esmail@csiro.au
module load samtools
samtools flagstat ${FILE} >${FILE}.stats

#in the terminal type:
for i in `ls *bam`; do sbatch --export FILE=$i samtools_flagstat.sh ;done

#Step6:MARK and remove duplicates using MarkDuplicates through picard tools!
04_MarkDuplicates.sh SCRIPT
for i in `ls *bam`; do ./04_MarkDuplicates.sh $i ;done


